package org.jicker.gcm9mm;

public class ConvertBin2Ascii {

    /**
     * @param args
     */
    public static void main(String[] args) {
    String	binText
    String hexText = "";

    Integer n = null;
    int i = 0;
    n.parseInt("01010101", 2);
    //System.out.println(n.parseInt("01010101", 2));
    //System.out.println(test.toChars(n.parseInt("0101011111", 2)));
    int m = 0;
    Character out = null;
    char c;


    String outString = null;
    while (m < binText.length()){
        //System.out.print(n.parseInt(binary.substring(m, m+8), 2) + " ");

        //System.out.println(String.valueOf(n.parseInt(binText.substring(m, m+8), 2) + " "));
        hexText = hexText + String.valueOf(n.parseInt(binText.substring(m, m+8), 2) + " ");

        //out.toChars(n.parseInt(binText.substring(m, m+8), 2));
        //out.toChars(n.parseInt(binary.substring(m, m+8), 2)).toString();
        //outString = outString + out.toString();
        //outString.concat(out.toString());
        m = m+9;
    }
    System.out.println(hexText);
    while (i < hexText.length()){
        System.out.print(hexText.substring(i, i+2));
        Integer.valueOf(hexText.substring(i, i+2), 16);
        i=i+2;
    }
    }

}
